micronaut:
  application:
    name: micronautOathTest
  metrics:
    enabled: true
  security:
    authentication: idtoken
    oauth2:
      clients:
        cognito:
          client-id: ${OAUTH_CLIENT_ID:77por3ndcbviqde5o7brav5poj}
          client-secret: ${OAUTH_CLIENT_SECRET:}
          openid:
            issuer: https://cognito-idp.${COGNITO_REGION:us-east-1}.amazonaws.com/${COGNITO_POOL_ID:us-east-1_lUZuZs1zq}/
    intercept-url-map:
    - access: isAnonymous()
      pattern: /swagger/**
    - access: isAnonymous()
      pattern: /swagger-ui/**
    endpoints:
      logout:
        get-allowed: true
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
datasources:
  default:
    driverClassName: org.postgresql.Driver
    db-type: postgres
    dialect: POSTGRES
    url: jdbc:postgresql://postgres:5432/demodb # Use JDBC style url
    username: ${pg.user:postgres}
    password: ${pg.secret:}

nats.addresses:
- nats://localhost:4222

jpa:
  default:
    properties:
      hibernate:
        hbm2ddl:
          auto: update
netty:
  default:
    allocator:
      max-order: 3
jpa.default.properties.hibernate.hbm2ddl.auto: update
